# Generated by Django 4.2.2 on 2023-06-19 11:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter the actor's name", max_length=200)),
                ('surname', models.CharField(help_text="Enter the actor's surname", max_length=200)),
                ('date_of_birth', models.DateField(help_text="Enter the actor's date of birth")),
                ('contact', models.CharField(help_text="Enter the actor's contact information", max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a play genre (e.g. Drama, Comedy)', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Play',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of the play', max_length=200)),
                ('director', models.CharField(help_text='Enter the name of the director', max_length=200)),
                ('datetime', models.DateTimeField(help_text='Enter the date and time of the play')),
                ('genre', models.ManyToManyField(help_text='Choose play genre', to='catalog.genre')),
            ],
        ),
        migrations.CreateModel(
            name='Viewer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Enter the viewer's name", max_length=200)),
                ('surname', models.CharField(help_text="Enter the viewer's surname", max_length=200)),
                ('contact', models.CharField(help_text="Enter the viewer's contact information", max_length=200)),
                ('visits', models.PositiveIntegerField(default=0, help_text='Enter the number of previous visits')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seatkind', models.CharField(help_text='Enter the category of the seat', max_length=200)),
                ('price', models.DecimalField(decimal_places=2, help_text='Enter the ticket price', max_digits=8)),
                ('status', models.BooleanField(default=True, help_text='Specify if the ticket is available or sold')),
                ('play', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.play')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Enter the review text')),
                ('mark', models.PositiveIntegerField(help_text='Enter the review mark (rating)')),
                ('play', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.play')),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.viewer')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(help_text='Enter the number of tickets')),
                ('status', models.BooleanField(default=False, help_text='Specify if the booking is confirmed or pending')),
                ('play', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.play')),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.viewer')),
            ],
        ),
    ]
